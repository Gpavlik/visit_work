(function(){var loadHandler=window['s_{8F3514B2-F595-4709-8FA6-258D5157AC2B}'];var scenarioJson = "";var skinSettingsJson = {"characterSpeech":{"fontFamily":"Open Sans","type":"standard"},"colors":{"audio.playback":{"value":"#339BE0"},"button.background.normal":{"value":"#339BE0"},"button.background.over":{"value":"#3A8FC7"},"button.text.normal":{"value":"#FFFFFF"},"button.text.over":{"value":"#FFFFFF"},"characterSpeech.background":{"alpha":"0.89804","value":"#CFDCEF"},"characterSpeech.text":{"value":"#000000"},"hyperlinks":{"value":"#097CE7"},"message.background":{"alpha":"0.89804","value":"#FFFFFF"},"message.text":{"value":"#000000"},"pageBackground":{"value":"#263944"},"reply.background.normal":{"alpha":"0.89804","value":"#FFFFFF"},"reply.background.over":{"alpha":"0.89804","value":"#D6ECFF"},"reply.text":{"value":"#31363F"},"title.background":{"alpha":"0.20784","value":"#425159"},"title.text":{"value":"#E8E8E8"}},"message":{"fontFamily":"Open Sans","type":"standard"},"moodMeter":{"type":"standard","visible":true},"reply":{"bullet":{"type":"numbers"},"fontFamily":"Open Sans","type":"standard"},"showTitle":false};var i18nJson = {"AUTHORIZATION_FORM_ERROR_EMAIL":"Укажите правильный адрес электронной почты","AUTHORIZATION_FORM_ERROR_FIELD_REQUIRED":"Обязательное поле","AUTHORIZATION_FORM_SEND_TO_STUDENT_EMAIL_HINT":"Результаты будут отправлены на указанный E-mail","AUTHORIZATION_FORM_TITLE":"Введите ваши данные:","Player.Accessible.AnswerOptions":"Варианты ответов:","Player.Accessible.AriaLabelAudioPlayer":"Аудиоплеер","Player.Accessible.AriaLabelCharacterSpeech":"Речь персонажа","Player.Accessible.AriaLabelFinalScene":"Финальная сцена","Player.Accessible.AriaLabelFinalSceneButtons":"Кнопки финальной сцены","Player.Accessible.AriaLabelMessageButton":"Кнопка сообщения","Player.Accessible.AriaLabelScene":"Сцена","Player.Accessible.AriaLabelSceneMessage":"Сообщение сцены","Player.Accessible.AriaLabelSettings":"Настройки доступности","Player.Accessible.AriaLabelStartTalk":"Начать диалог","Player.Accessible.AriaLabelTopPanel":"Верхняя панель","Player.Accessible.AriaLabelTrialBanner":"Создано с помощью демоверсии iSpring Suite. Узнать больше","Player.Accessible.CharacterEmotion":"Эмоция персонажа:","Player.Accessible.GotoAccessibleMode":"Перейти в режим для слабовидящих","Player.Accessible.GotoNormalMode":"Перейти в режим полного плеера","Player.Accessible.HiddenLink":"Перейти к началу сцены","Player.Accessible.MoodAngry":"Разозлен","Player.Accessible.MoodHappy":"Счастлив","Player.Accessible.MoodNormal":"Нейтрален","Player.Accessible.MoodPuzzled":"Озадачен","Player.Accessible.MoodUnhappy":"Недоволен","Player.Accessible.UserScore":"Набрано баллов: %USER_SCORE%","Player.Accessible.UserScoreAndMax":"Набрано баллов: %USER_SCORE% из %MAX_SCORE%","Player.Application.Back":"Назад","Player.Button.Back":"Назад","Player.Button.Continue":"Продолжить","Player.Button.Finish":"Завершить","Player.Button.No":"Нет","Player.Button.OK":"ОК","Player.Button.Restart":"Начать сначала","Player.Button.Skip":"Пропустить","Player.Button.Yes":"Да","Player.Message.Btn.Text":"Продолжить","Player.Message.Start.Btn.Text":"Начать","Player.Msg.ResumePrompt":"Хотите ли Вы продолжить с того места, где остановились в прошлый раз?","Player.Msg.ResumePromptTitle":"Продолжить диалог","Player.Msg.SendReportToEmailFailed":"Не удалось отправить результаты на e-mail. Попробовать еще раз?","Player.Msg.SendReportToUrlFailed":"Не удалось отправить результаты на сервер. Попробовать еще раз?","Player.Msg.SendingReport":"Отправка результатов…","Player.Msg.UserScoreTemplate(%USER_SCORE%)":"Ваш результат: %USER_SCORE%","Player.Msg.UserScoreWithMaxScoreTemplate(%USER_SCORE%)":"Ваш результат: %USER_SCORE% из %MAX_SCORE% баллов"};var reportTemplate = "<scenarioReportTemplate version=\"4\" xmlns=\"http:\/\/www.ispringsolutions.com\/talkmaster\/scenario\/1\">\n  <templates>\n    <template id=\"useTakersEmailSettings\"><![CDATA[false]]><\/template>\n  <\/templates>\n  <messages>\n    <message id=\"from\"><![CDATA[Диалог Гропринозин]]><\/message>\n    <message id=\"subject\"><![CDATA[[%SIM_STATUS%] Результат диалога: &quot;%SIM_TITLE%&quot;]]><\/message>\n    <message id=\"user\"><![CDATA[Пользователь:]]><\/message>\n    <message id=\"userId\"><![CDATA[Id пользователя:]]><\/message>\n    <message id=\"disclaimer\"><![CDATA[Это автоматическое сообщение с отчетом о результатах диалога. Вы видите это сообщение, потому что автор диалога включил отправку результатов на ваш электронный адрес.]]><\/message>\n    <message id=\"gradedScenario\"><![CDATA[Оцениваемый диалог]]><\/message>\n    <message id=\"surveyScenario\"><![CDATA[Диалог]]><\/message>\n    <message id=\"userScore\"><![CDATA[Набранный балл:]]><\/message>\n    <message id=\"maxScore\"><![CDATA[Максимальный балл:]]><\/message>\n    <message id=\"passingScore\"><![CDATA[Проходной балл:]]><\/message>\n    <message id=\"duration\"><![CDATA[Продолжительность диалога:]]><\/message>\n    <message id=\"scenarioResult\"><![CDATA[Результат:]]><\/message>\n    <message id=\"passed\"><![CDATA[Диалог успешно пройден]]><\/message>\n    <message id=\"failed\"><![CDATA[Диалог не пройден]]><\/message>\n    <message id=\"finished\"><![CDATA[Диалог завершен]]><\/message>\n    <message id=\"score\"><![CDATA[Баллы:]]><\/message>\n    <message id=\"spentTimeFormat\"><![CDATA[%SPENT_TIME%]]><\/message>\n  <\/messages>\n<\/scenarioReportTemplate>";var maxScore = '0';var reportUrl = "https://s4.ispring.ru";loadHandler&&loadHandler(0, 's_B23C0A34-FCD2-47B9-BF2D-1B0962D0ADE1', scenarioJson, skinSettingsJson, i18nJson, reportTemplate, maxScore, reportUrl);})();